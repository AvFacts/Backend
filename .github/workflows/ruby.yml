# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will download a prebuilt Ruby version, install dependencies and run tests with Rake
# For more information see: https://github.com/marketplace/actions/setup-ruby-jruby-and-truffleruby

name: Ruby

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  test:
    name: Tests
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:13.5
        env:
          POSTGRES_DB: avfacts_test
          POSTGRES_USER: avfacts
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - "5432:5432"
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - name: Install FFMPEG
        run: |
          sudo apt update
          sudo apt -y install \
            autoconf \
            automake \
            build-essential \
            cmake \
            git-core \
            libass-dev \
            libfreetype6-dev \
            libsdl2-dev \
            libtool \
            libva-dev \
            libvdpau-dev \
            libvips-dev \
            libvorbis-dev \
            libxcb1-dev \
            libxcb-shm0-dev \
            libxcb-xfixes0-dev \
            pkg-config \
            texinfo \
            wget \
            zlib1g-dev
          mkdir -p ~/ffmpeg_sources
          sudo apt install nasm yasm libfdk-aac-dev libmp3lame-dev
          pushd ~/ffmpeg_sources
          wget -O ffmpeg-snapshot.tar.bz2 https://ffmpeg.org/releases/ffmpeg-snapshot.tar.bz2
          tar xjvf ffmpeg-snapshot.tar.bz2
          cd ffmpeg
          PATH="$HOME/bin:$PATH" PKG_CONFIG_PATH="$HOME/ffmpeg_build/lib/pkgconfig" ./configure \
            --pkg-config-flags="--static" \
            --extra-libs="-lpthread -lm" \
            --enable-gpl \
            --enable-libfdk-aac \
            --enable-libmp3lame \
            --enable-nonfree
          make
          sudo make install
          popd
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: "3.1"
          bundler-cache: true
      - name: Create test database
        env:
          POSTGRES_DB: avfacts_test
          POSTGRES_USER: avfacts
          POSTGRES_PASSWORD: postgres
          RAILS_MASTER_KEY: ${{ secrets.RAILS_MASTER_KEY }}
        run: |
          sudo apt-get install libpq-dev
          RAILS_ENV=test bin/rails db:setup
      - name: Run unit tests
        env:
          POSTGRES_DB: avfacts_test
          POSTGRES_USER: avfacts
          POSTGRES_PASSWORD: postgres
          RAILS_MASTER_KEY: ${{ secrets.RAILS_MASTER_KEY }}
        run: bundle exec rspec spec

  linters:
    name: Linters
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: "3.1"
          bundler-cache: true
      - name: Run Rubocop
        run: |
          gem install rubocop-rails rubocop-rspec rubocop-performance
          git clone https://gist.github.com/65e21b9e8b0d1db285dcb4fc627b98fa.git .rubocop
          cp .rubocop/.rubocop.yml .rubocop-ruby.yml
          git clone https://gist.github.com/14cfa24d53c12bf385871e9b93b95c37.git .rubocop-rspec
          cp .rubocop-rspec/.rubocop-rspec.yml .
          git clone https://gist.github.com/9f3bb94ef794f92dd480cffa019e91a4.git .rubocop-rails
          cp .rubocop-rails/.rubocop-rails.yml .
          cat .rubocop.yml | sed -e 's/~\/.rubocop/.rubocop/' | sed -e 's/.rubocop.yml/.rubocop-ruby.yml/' > .rubocop2.yml
          mv .rubocop2.yml .rubocop.yml
          rubocop --parallel
      - name: Run Brakeman
        run: |
          #gem install brakeman
          git clone https://github.com/presidentbeef/brakeman.git
          pushd brakeman
          gem build brakeman.gemspec
          gem install brakeman*.gem
          popd
          brakeman -q -w2
